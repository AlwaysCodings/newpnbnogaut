
local seedid = blockid+1
   getBot().collect_range = 1


function GonWebhook(MuhrizaLogs)
    wh = Webhook.new(WebhookUrl)
    wh.username = "Muhriza Logs"
    wh.avatar_url = "https://cdn.discordapp.com/attachments/1018770791166382120/1169432965298786424/standard.gif?ex=65556251&is=6542ed51&hm=c1bebe2c1903d3f987ac0a3effac7d3fd4a8deb3552fdafd8621db17d21f46ec&"
    wh.embed1.use = true
    wh.embed1.title = "Pnb by Muhriza"
    wh.embed1.description = MuhrizaLogs
    wh:send()
end





local originalPositions = {}

function GoToSpot()
    local offsetX = range_between_bots
    
    local botList = getBot():getWorld():getPlayers()
    local botName = getBot().name
    
    local botIndex = nil
    
    for index, bot in ipairs(botList) do
        if bot.name == botName then
            botIndex = index
            break
        end
    end
    
    if botIndex then
        checker()
        if getBot():isInWorld(string.upper(worldname)) then
            local storedPosition = originalPositions[botName]
            local destinationX, destinationY
            
            if storedPosition then
                destinationX = storedPosition.x
                destinationY = storedPosition.y
            else
                for _, tile in pairs(getBot():getWorld():getTiles()) do
                    if tile.fg == backgroundid then
                        destinationX = tile.x + offsetX * (botIndex - 1)
                        destinationY = tile.y
                        break
                    end
                end
                
                
                originalPositions[botName] = { x = destinationX, y = destinationY }
            end
            sleep(1000)
            getBot():findPath(destinationX, destinationY)
            sleep(1000)
        end
    end
end

function checker1()
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.bg == 6 or tile.fg == 6 then
            if getBot():isInTile(tile.x, tile.y) then
                return false
            else
                return true
            end
        end
    end
end

function GetPOS()
    if getBot().status == BotStatus.online and checker1() then
        local world = getBot():getWorld()
        if world then
            local localInfo = world:getLocal()
            if localInfo then
                local posx = localInfo.posx or 0
                local posy = localInfo.posy or 0

                return {
                    x = math.floor(posx / 32),
                    y = math.floor(posy / 32)
                }
            end
        end
    end

    return 0
end

function gotoworld()
    getBot():warp(worldname, worldid)
    sleep(2000)
end

function place1()
    local bot = getBot()

    bot.auto_collect = true
    getBot().collect_range = 3
    if not bot or bot.status ~= BotStatus.online then
        return
    end

    local pos = GetPOS()
    local world = bot:getWorld()

    if not pos or not world then
        return
    end

    local tile = world:getTile(pos.x, pos.y - 2)

    if tile then
        bot:place(pos.x, pos.y - 2, blockid)
        sleep(placedelay)
    end
    local tile = world:getTile(pos.x, pos.y - 2)
    
    if tile and tile.fg == blockid then
        while tile.fg == blockid do 
            bot:hit(pos.x, pos.y - 2, blockid)
            sleep(hitdelay)
            tile = world:getTile(pos.x, pos.y - 2)
        end
    end
end

function antibw()
    if getBot():getPing() >= maxping then 
        getBot().auto_reconnect = false
        getBot():disconnect()
        sleep(bwsleepamount)
        getBot().auto_reconnect = true
    end
end


function gotakeblock()
    getBot():warp(takeblock, takeid)
    sleep(2000)
end

function takeblocks()
    local isCorrectWorld = getBot():getWorld().name == string.upper(takeblock)
    
    if getBot():getInventory():getItemCount(blockid) == 0 then
        if not isCorrectWorld then
            gotakeblock()
            sleep(1000)
        end

        if isCorrectWorld then
            for _, object in pairs(getBot():getWorld():getObjects()) do
                if object.id == blockid then
                    getBot():findPath(math.floor(object.x / 32), math.floor(object.y / 32))
                    sleep(1000)
                    getBot():collect(2, 50)
                    sleep(1000)
                    if getBot():getInventory():getItemCount(blockid) > 0 then
                        sleep(1000)
        GonWebhook("<:growbot:992058196439072770> Bot Name : "..getBot().name..
        "\n <:gtwrench:1158730913459490867> Bot Level : "..getBot().level..
        "\n <:world:1157343724381151292> Current World : "..getBot():getWorld().name..
        "\n <:peppertree:999318156696887378> Left Block : "..growScan(blockid))
                        return
                    end
                end
            end
        end
    end
end

function growScan(ID)
    count = 0
    for _, object in pairs(getBot():getWorld():getObjects()) do
        sleep(1)
        if object.id == ID then
            count = count + object.count
        end
    end
    return count
end

function checker()
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.bg == 6 or tile.fg == 6 then
            if getBot():isInTile(tile.x, tile.y) then
                sleep(1000)
                gotoworld()
                sleep(2000)
                break
            end
        end
    end
end

function antiexit()
    if getBot().status == BotStatus.online and getBot() then 
        if getBot():isInWorld("EXIT") then 
            gotakeblock()
        end
    end
end

function pnb()
    place1()
end

function DropF()
    bot = getBot()
    inventory = bot:getInventory()
    world = bot:getWorld()
    getBot().auto_collect = false
    while bot.gem_count > pricepack do
        bot:sendPacket(2, "action|buy\nitem|"..packname)
        sleep(3000)
    end
    if inventory:getItemCount(seedid) > 0 then
        bot:warp(savename,saveid)
        while (inventory:getItemCount(seedid)) > 0 do
            sleep(2000)
            bot:moveLeft()
            sleep(1000)
            bot:drop(seedid,inventory:getItemCount(seedid))
            sleep(500)
            if getBot():getInventory():getItemCount(seedid) == 0 then 
                sleep(1000)
                break 
            end
        end  
    end
    for i, packID in ipairs(packList) do
    if inventory:getItemCount(packID) > 0 then
        bot:warp(savene,saveze)
        while inventory:getItemCount(packID) > 0 do
            sleep(2000)
            bot:moveLeft()
            sleep(1000)
            bot:drop(packID,inventory:getItemCount(packID))
            sleep(500)
            if getBot():getInventory():getItemCount(packID) == 0 then 
                sleep(1000)
                break 
            end
        end
    end
end
end


function main()
    checker()
    takeblocks()
    sleep(1000)
    if not getBot():isInWorld(string.upper(worldname)) and  getBot():getInventory():getItemCount(blockid) > 0  then gotoworld() end
    antiexit()
    sleep(2000)
    GoToSpot()
    sleep(1000)
        GonWebhook("<:growbot:992058196439072770> Bot Name : "..getBot().name..
        "\n <:gtwrench:1158730913459490867> Bot Level : "..getBot().level..
        "\n <:world:1157343724381151292> Current World : "..getBot():getWorld().name..
        "\n <:gems:1157338912369422397> Gems Bot : "..getBot().gem_count)
    checker()
    antibw()
    while getBot():getInventory():getItemCount(blockid) > 0  and getBot():isInWorld(string.upper(worldname)) and getBot():isInTile(originalPositions[getBot().name].x, originalPositions[getBot().name].y) do
        pnb()
        antibw()
        antiexit()
    end
   DropF()
   end


while true do
    main()
end
